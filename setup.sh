#!/bin/bash

# generated by chatgpt

CREATE_ENV=false
INSTALL=false
PYTHON_PATH=$(which python)
PYTHON_VERSION=$(echo $PYTHON_PATH | grep -oP 'python\d+\.\d+' | sed 's/python//')

# Parse command line arguments
for arg in "$@"
do
    case $arg in
        --create-env*)
            CREATE_ENV=true
            if [[ $arg == *=* ]]; then
                PYTHON_VERSION=${arg#*=}
            fi
            ;;
        --install)
            INSTALL=true
            ;;
        --help)
            echo "Usage: $0 [OPTIONS]"
            echo "Options:"
            echo "  --create-env[=VERSION]   Create a new virtual environment using the specified Python version or default if none provided."
            echo "  --install                Install required packages."
            echo "  --help                   Display this help message."
            exit
            ;;
        *)
            echo "Unknown option: $arg"
            exit 1
            ;;
    esac
done

# Check if virtual environment exists, and ask user if they want to delete it if --create-env is used
if [ "$CREATE_ENV" = true ]
then
    if [ -d "env" ]
    then
        read -p "Virtual environment already exists, do you want to remove it? (y/n): " choice
        case "$choice" in
            y|Y )
                rm -rf env
                echo "Virtual environment removed."
                ;;
            n|N )
                echo "Using existing virtual environment."
                ;;
            * )
                echo "Invalid choice. Using existing virtual environment."
                ;;
        esac
    fi

    # Create new virtual environment
    if [ ! -d "env" ]
    then
        echo "Creating new virtual environment..."
        python$PYTHON_VERSION -m venv env || { echo "Error creating virtual environment"; exit 1; }
        echo "Virtual environment created."
    fi
fi

# Activate virtual environment
source env/bin/activate

# Install requirements if requested
if [ "$INSTALL" = true ]
then
    python -m pip install -r requirements.txt
    pip install --upgrade pip
fi

exec $SHELL
